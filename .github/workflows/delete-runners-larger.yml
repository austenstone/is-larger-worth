name: "4. Delete Larger Runners"

on:
  workflow_dispatch:

env:
  ORG: ${{ github.event.repository.owner.login }}
  GITHUB_TOKEN: ${{ secrets.PAT }}
  
jobs:
  get-runner-group:
    runs-on: ubuntu-latest
    outputs:
      runner_group_id: ${{ steps.get.outputs.runner_group_id }}
    env:
      RUNNER_GROUP_NAME: 'larger-runners'
    steps:
      - id: get
        run: |
          runner_group_id="$(gh api /orgs/${{ env.ORG }}/actions/runner-groups --paginate --jq '.runner_groups.[] | select(.name=="${{ env.RUNNER_GROUP_NAME }}")' | jq -r '.id')"
          echo "runner_group_id=${runner_group_id}" >> $GITHUB_OUTPUT

  get-runner-ids:
    runs-on: ubuntu-latest
    outputs:
      runner_ids: ${{ steps.get.outputs.runner_group_id }}
    steps:
      - id: get
        run: |
          runner_ids="$(gh api /orgs/octodemo/actions/larger-runners --jq '[.runners.[] | select(.name=="4-core" or .name=="8-core" or .name=="16-core" or .name=="32-core" or .name=="64-core") | .id]')"
          echo "runner_ids=${runner_ids}" >> $GITHUB_OUTPUT
  delete-runners:
    runs-on: ubuntu-latest
    needs: get-runner-ids
    strategy:
      matrix:
        image: [ 'ubuntu-latest' ]
        runner_ids: fromJson('${{ needs.get-runner-ids.outputs.runner_ids }}')
    steps:
      - run: gh api --method DELETE /orgs/${{ env.ORG }}/actions/larger-runners/${{ matrix.runner_ids }}
  delete-runner-group:
    runs-on: ubuntu-latest
    needs: [ delete-runners, get-runner-group ]
    steps:
      - run: sleep 30 # wait for runners to be deleted
      - run: gh api --method DELETE /orgs/${{ env.ORG }}/actions/runner-groups/${{ needs.get-runner-group.outputs.runner_group_id }}